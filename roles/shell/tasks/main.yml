---
- name: Install bash
  community.general.homebrew:
    name: bash
    state: present

- name: Add bash to the allowed shells
  become: true
  lineinfile:
    dest: /etc/shells
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    create: true
    mode: "0644"
  with_items:
    - { regexp: "^{{ homebrew_prefix }}/bin/bash", line: "{{ homebrew_prefix }}/bin/bash" }

- name: Register the current shell
  shell: echo $SHELL
  register: current_shell_result
  changed_when: false
  tags: [skip_ansible_lint]

- name: Change shell for the current user
  become: true
  shell: chsh -s {{ homebrew_prefix }}/bin/bash {{ lookup('env','USER') }}
  when: current_shell_result.stdout != (homebrew_prefix + "/bin/bash")
  changed_when: lookup('env','USER') != "runner"  # fix idempotence in CI
  tags: [skip_ansible_lint]

- name: Copy dotfiles
  template:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/.{{ item }}"
    backup: true
    mode: "0644"
  with_items:
    - aliases
    - apps
    - bash_profile
    - bashrc
    - exports
    - functions
    - gitconfig
    - gitignore_global
    - path

- name: Install bash-it
  git:
    repo: https://github.com/Bash-it/bash-it.git
    dest: "{{ bash_it_install_path }}"
    version: v3.0.3
  register: bash_it_checkout

- name: Add bash-it to dotfiles
  blockinfile:
    path: "{{ ansible_env.HOME }}/.managed"
    create: true
    marker: "### {mark} ANSIBLE MANAGED BASH-IT CONFIG ###"
    mode: "0644"
    block: |
      # Path to the bash it configuration
      export BASH_IT="{{ bash_it_install_path }}"

      # Lock and Load a custom theme file
      export BASH_IT_THEME="{{ bash_it_theme }}"

      # Load Bash It
      source $BASH_IT/bash_it.sh

- name: Migrate bash-it to latest versions
  command: /usr/bin/env bash -l -c "bash-it migrate"
  when: bash_it_checkout.before != None and bash_it_checkout.before != bash_it_checkout.after
  tags: [skip_ansible_lint]

- name: Install bash-it aliases, completions, and plugins
  command: /usr/bin/env bash -l -c "bash-it enable {{ item.to_enable }} {{ item.list | join(' ') }}"
  register: result
  changed_when: result.stdout_lines | reject('match', '.* is already enabled.') | list | length
  with_items:
    - { to_enable: plugin, list: "{{ bash_it_plugins }}" }
    - { to_enable: completion, list: "{{ bash_it_completions }}" }
    - { to_enable: alias, list: "{{ bash_it_aliases }}" }
  tags: [skip_ansible_lint]
