#!/bin/bash

export HOMEBREW_CASK_OPTS="--appdir=/Applications"

BGreen='\e[1;32m'       # Green
BRed='\e[1;31m'         # Red
Color_Off='\e[0m'       # Text Reset

function setStatusMessage {
    printf "${IRed} --> ${BGreen}$1${Color_Off}\n" 1>&2
}

function setSuccessMessage {
    printf "${BGreen}$1${Color_Off}\n" 1>&2
}

function triggerError {
    printf "${BRed} --> $1 ${Color_Off}\n" 1>&2
    exit 1
}

# Check whether a command exists - returns 0 if it does, 1 if it does not
function exists {
  if command -v $1 >/dev/null 2>&1
  then
    return 0
  else
    return 1
  fi
}

function get_sudo {
    setStatusMessage "Checking if we need to ask for a sudo password"
    sudo -v
    setStatusMessage "Keep-alive: update existing sudo time stamp until we are finished"
    while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

function with_ansible {
    pkgx +ansible@2.15.3 $@
}

function install_roles {
    setStatusMessage "Get all the required roles"
    with_ansible ansible-galaxy install -r requirements.yml
}

function install_pkgx {
    [ -d /usr/local/bin ] || sudo mkdir /usr/local/bin
    curl -Ssf https://pkgx.sh/$(uname)/$(uname -m).tgz | sudo tar xz -C /usr/local/bin
}

printf "${BGreen} ╔╦╗┌─┐┌─┐  ╔═╗┌─┐┬─┐┌┬┐┬ ┬ ${Color_Off}\n";
printf "${BGreen}  ║ ├┤ ├─┤  ╠═╝├─┤├┬┘ │ └┬┘ ${Color_Off}\n";
printf "${BGreen}  ╩ └─┘┴ ┴  ╩  ┴ ┴┴└─ ┴  ┴  ${Color_Off}\n\n";

function sub_help {
    echo "Usage: ./tea-party <subcommand> [options]"
    echo "Subcommands:"
    echo "    prepare                Setup the local environment with required dependencies (get ready for the party)."
    echo "           [--reinstall]   Reinstall the galaxy roles"
    echo "    throw                  Install the suggested dependencies (throw the party)."
    echo "           [...invitees]   Ansible tags to run. If none provided, all tags are run."
    echo ""
}

function sub_prepare {
    while test $# -gt 0; do
        case "$1" in
            "--reinstall")
                shift
                install_roles
                ;;
            *)
                triggerError "Unknown option $1"
                ;;
        esac
    done

    if ! exists pkgx; then
        install_pkgx
    fi

    if [[ ! -d "$PWD/vendor" ]]; then
        install_roles
    fi

    setSuccessMessage "Prepared environment to install"
    setStatusMessage  "Run './tea-party throw' with optional tags to set up the computer"
}

function sub_throw {
    TAGS=""

    while test $# -gt 0; do
        if [[ $TAGS == "" ]]; then
            TAGS="--tags $1"
        else
            TAGS="$TAGS,$1"
        fi
        shift
    done

    get_sudo
    setStatusMessage "Running the ansible playbook"
    with_ansible ansible-playbook -K -i "localhost," computer.yml $TAGS
}

subcommand="${1:-help}"

shift
sub_${subcommand} $@
if [ $? = 127 ]; then
    echo "Error: '$subcommand' is not a known subcommand." >&2
    echo "       Run './tea-party' for a list of known subcommands." >&2
    exit 1
fi
